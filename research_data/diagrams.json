{
  "31c31a0c-7601-488a-9fee-71a4ea81e82a": {
    "id": "31c31a0c-7601-488a-9fee-71a4ea81e82a",
    "timestamp": "2025-06-15T16:05:13.743569",
    "type": "class",
    "plantuml_code": "@startuml\nclass System {\n+ displayLoginPage()\n+ validateInformation()\n+ validateLogin()\n+ openPage()\n+ showOkMessage()\n+ storeBooks()\n+ retrieveBooks()\n+ askUserToLogin()\n+ identifyUserType()\n+ showCategoriesToBrowse()\n+ checkBooksInDatabase()\n+ retrieveBooksByCategory()\n+ searchBooks()\n+ searchAvailableBook()\n+ giveMemberIdToLibrarian()\n+ checkBookAvailability()\n+ updateInformationInDatabase()\n+ borrowBooks()\n+ returnBook()\n+ storeMembersDatabase()\n+ retrieveAvailableMembers()\n+ removeAvailableBooks()\n+ addRemoveBookDetails()\n+ addRemoveMember()\n}\nclass User {\n+ clickLoginButton()\n+ enterLoginDetails()\n+ clickConfirmButton()\n+ clickViewUserDetails()\n+ selectCategoryToView()\n+ selectDesiredBooks()\n+ printDetails()\n+ reserveBook()\n+ giveMemberIdToLibrarian()\n+ returnBook()\n+ viewMembers()\n}\nclass Database {\n+ validateInformation()\n+ retrieveReadyBooks()\n+ identifyUserType()\n+ checkBooksInDatabase()\n+ retrieveBooksByCategory()\n+ checkBookAvailability()\n+ updateInformationInDatabase()\n}\nclass Librarian {\n+ reserveBookForMember()\n+ issueBook()\n+ checkBookAvailability()\n+ issueBook()\n+ addBook()\n+ removeBook()\n}\nclass Administrator {\n+ addRemoveMember()\n}\nSystem \"1\" --> \"1\" Database\nSystem \"1\" --> \"1\" Librarian\nSystem \"1\" --> \"1\" Administrator\nSystem \"1\" --> \"1\" User\nUser \"1\" --> \"1\" System\nLibrarian \"1\" --> \"1\" System\nAdministrator \"1\" --> \"1\" System\n@enduml",
    "snl_data": {
      "snl_text": "The system shall provide member with the ability to click the login button on the home page. The system shall be able to display the log in page. The system shall provide member with the ability to enter his login i d with password. The system shall provide member with the ability to click on the confirm button. The system shall be able to check that all of the required information entered. If the entered information is wrong then the system shall be able to ask member to reenter details. The system shall be able to validate the entered information against the tables stored in the database. The system shall provide member with the ability to logged in. The system shall provide member with the ability to click on view user details. The system shall be able to open a page showing the details of the member. The system shall be able to include total fine details number  issued  books ,  date  issue ,  return  date ,  paid. The system shall provide member with the ability to close the page. The system shall be able to show ok message. The system shall be able to stored books database. The system shall be able to retrieve ready books. The system shall be able to ask user to login. The system shall be able to identify the type of user member , guest or administrator. The system shall be able to show the categories to browse. The system shall provide user with the ability to select a category of books to view. If no category is selected by the user then the system shall be able to select again asks user to select a category. The system shall be able to check the books in the database. The system shall be able to retrieve all the books falling in that category. The system shall provide user with the ability to select the desired books. The system shall be able to show the details of the selected books. The system shall be able to ask user to print the details. If user does not want to print the details then the system shall be able to ignore user step. The system shall provide user with the ability to reserve a book by inputting the relevant details. The system shall provide librarian with the ability to also reserve a book for a member. The system shall provide user with the ability to logged in. The system shall provide user with the ability to have correct book i d. Books available to reserve. The system shall be able to ask user to login. The system shall be able to identify the type of user member , guest or administrator. The system shall be able to show the categories to browse. The system shall provide user with the ability to select book to reserve. If no book is selected by the user then the system shall be able to select again asks user to select a book to reserve. The system shall provide user with the ability to enter book i d to reserve. If the book id is wrong then the system shall be able to be asks user to recheck bookThe system shall be able to d. Books database. If the selected book is already reserved on another id then the system shall be able to d asks user to select another book. The system shall be able to logged members. The system shall be able to search books. The system shall be able to search available book. The system shall be able to show the categories to browse. The system shall provide member with the ability to select a category of searching a book. If no category is selected by the member then the system shall be able to ask again user to select a category. The system shall be able to check the books in the database. The system shall be able to retrieve all the books falling in that category. The system shall provide member with the ability to give the member i d to the librarian. The system shall be able to available books issue. The system shall provide librarian with the ability to check the availability of the books. The librarian also checks total number of books issued on that id. Librarian issues the book. The system shall provide user with the ability to not issue the books if the has three books issued on his i d. The system shall be able to update the information in database. The system shall be able to loggedThe system shall provide member with the ability to borrow books. The system shall provide member with the ability to give the member i d to the librarian. The system shall provide member with the ability to return the book. The system shall provide librarian with the ability to enter book i d , member i d in the system. If the entered book id is incorrect then the system shall be able to ask to reenter book i d. Prompts a message that book with book i d successfully returned. The system shall be able to stored members database. The system shall be able to retrieve available members. The system shall provide member with the ability to logged in. The system shall provide guest with the ability to also view members. The system shall provide user with the ability to click on view members. The system shall be able to open a page showing the details of the member. The system shall provide member with the ability to issued return paidThe system shall provide member with the ability to close the page. The system shall be able to loggedThe system shall be able to remove available books. The system shall be able to add available book details  or  remove  books  database. The system shall provide librarian with the ability to have option of adding or removing a book in database. The system shall be able to ask librarian to add or remove the book. The system shall provide librarian with the ability to add a book. The system shall be able to ask librarian to enter all the required details about the new book to added. The system shall provide librarian with the ability to enter the details. If the librarian selects to remove a book then the system shall be able to outdate book be. The system administrator that all the information has been correctly provided. The system shall provide administrator with the ability to logged in. The system shall provide member with the ability to available to remove. The system shall provide member with the ability to add remove in. The system shall be able to ask administrator to add or remove a member. The system shall provide administrator with the ability to select to add a member. The system shall be able to ask administrator to enter all the required details about the new member to added. The system shall provide administrator with the ability to enter the details. If the administrator selects to remove a member then the system shall be able to require a valid reason of removal. The system shall be able to validate that all the information correctly provided. ",
      "actors": [
        "member",
        "librarian",
        "view",
        "id.",
        "user",
        "guest",
        "administrator",
        "system"
      ],
      "preprocessed_text": "the member clicks the login button on the home page. the system displays the log in page. the member enters his login id with password. the member clicks on the confirm button. the system checks that all of the required information was entered. if the entered information is wrong then system asks member to reenter the details. the system validates the entered information against the tables stored in the database. member must be logged in to the system. the member clicks on view user details. the system opens a page showing the details of the member. the details include the total number of issued books, date of issue, return date, fine to be paid. the member closes the page. the system shows ok message. the books should be stored in database. the books must be ready to retrieve. the system asks user to login. the system identifies the type of user member, guest or administrator. the system shows the categories to browse. the user selects a category of books to view. if no category is selected by the user then the system again asks user to select a category. the system checks the books in the database. the system retrieves all the books falling in that category. the user selects the desired books. the system shows the details of the selected books. the system asks user to print the details. if user does not want to print the details then user can ignore the step. user can reserve a book by inputting the relevant details. the librarian can also reserve a book for a member. user should be logged in to the system. user should have correct book id. books should be available to reserve. the system asks user to login. the system identifies the type of user member, guest or administrator. the system shows the categories to browse. the user selects book to reserve. if no book is selected by the user then the system again asks user to select a book to reserve. the user enters book id to reserve. if the book id is wrong then system asks user to recheck the book id. the system checks the books in the database. if the selected book is already reserved on another id then system asks user to select another book. members should be logged in to the system. guest_user can also search books. book should be available to search. the system shows the categories to browse. the member selects a category of searching a book. if no category is selected by the member then the system again asks user to select a category. the system checks the books in the database. the system retrieves all the books falling in that category. member should give the member id to the librarian. books should be available to issue. the librarian checks the availability of the books. the librarian also checks total number of books issued on that id. librarian issues the book. the librarian cannot issue the books if the user has three books issued on his id. the system updates the information in database. librarian should be logged in to the system. member should have borrowed books. member should give the member id to the librarian. the member returns the book. the librarian enters book id , member id in the system. if the entered book id is incorrect then system asks to reenter the book id. the system prompts a message that the book with book id is successfully returned. members should be stored in the database. members should be available to retrieve by the system. member must be logged in to the system. guest can also view members. the user clicks on view members. the system opens a page showing the details of the member. the details include name of member, the total number of issued books, date of issue, return date, fine to be paid. the member closes the page. librarian should be logged in to the system. books should be available to remove. book details should be available to add or remove books in the database. the librarian has option of adding or removing a book in database. the system asks librarian to add or remove the book. the librarian adds a book. the system asks librarian to enter all the required details about the new book to be added. the librarian enters the details. if the librarian selects to remove a book then the book should be outdated. the system administrator that all the information has been correctly provided. administrator should be logged in to the system. member should be available to remove. member details should be available to add or remove member in the database. the system asks administrator to add or remove a member. the administrator selects to add a member. the system asks administrator to enter all the required details about the new member to be added. the administrator enters the details. if the administrator selects to remove a member then a valid reason of removal is required. the system validates that all the information has been correctly provided.",
      "sentences_count": 86,
      "formatted_sentences": "1. The system shall provide member with the ability to click the login button on the home page.\n2. The system shall be able to display the log in page.\n3. The system shall provide member with the ability to enter his login i d with password.\n4. The system shall provide member with the ability to click on the confirm button.\n5. The system shall be able to check that all of the required information entered.\n6. If the entered information is wrong then the system shall be able to ask member to reenter details.\n7. The system shall be able to validate the entered information against the tables stored in the database.\n8. The system shall provide member with the ability to logged in.\n9. The system shall provide member with the ability to click on view user details.\n10. The system shall be able to open a page showing the details of the member.\n11. The system shall be able to include total fine details number  issued  books ,  date  issue ,  return  date ,  paid.\n12. The system shall provide member with the ability to close the page.\n13. The system shall be able to show ok message.\n14. The system shall be able to stored books database.\n15. The system shall be able to retrieve ready books.\n16. The system shall be able to ask user to login.\n17. The system shall be able to identify the type of user member , guest or administrator.\n18. The system shall be able to show the categories to browse.\n19. The system shall provide user with the ability to select a category of books to view.\n20. If no category is selected by the user then the system shall be able to select again asks user to select a category.\n21. The system shall be able to check the books in the database.\n22. The system shall be able to retrieve all the books falling in that category.\n23. The system shall provide user with the ability to select the desired books.\n24. The system shall be able to show the details of the selected books.\n25. The system shall be able to ask user to print the details.\n26. If user does not want to print the details then the system shall be able to ignore user step.\n27. The system shall provide user with the ability to reserve a book by inputting the relevant details.\n28. The system shall provide librarian with the ability to also reserve a book for a member.\n29. The system shall provide user with the ability to logged in.\n30. The system shall provide user with the ability to have correct book i d.\n31. Books available to reserve.\n32. The system shall be able to ask user to login.\n33. The system shall be able to identify the type of user member , guest or administrator.\n34. The system shall be able to show the categories to browse.\n35. The system shall provide user with the ability to select book to reserve.\n36. If no book is selected by the user then the system shall be able to select again asks user to select a book to reserve.\n37. The system shall provide user with the ability to enter book i d to reserve.\n38. If the book id is wrong then the system shall be able to be asks user to recheck bookThe system shall be able to d.\n39. Books database.\n40. If the selected book is already reserved on another id then the system shall be able to d asks user to select another book.\n41. The system shall be able to logged members.\n42. The system shall be able to search books.\n43. The system shall be able to search available book.\n44. The system shall be able to show the categories to browse.\n45. The system shall provide member with the ability to select a category of searching a book.\n46. If no category is selected by the member then the system shall be able to ask again user to select a category.\n47. The system shall be able to check the books in the database.\n48. The system shall be able to retrieve all the books falling in that category.\n49. The system shall provide member with the ability to give the member i d to the librarian.\n50. The system shall be able to available books issue.\n51. The system shall provide librarian with the ability to check the availability of the books.\n52. The librarian also checks total number of books issued on that id.\n53. Librarian issues the book.\n54. The system shall provide user with the ability to not issue the books if the has three books issued on his i d.\n55. The system shall be able to update the information in database.\n56. The system shall be able to loggedThe system shall provide member with the ability to borrow books.\n57. The system shall provide member with the ability to give the member i d to the librarian.\n58. The system shall provide member with the ability to return the book.\n59. The system shall provide librarian with the ability to enter book i d , member i d in the system.\n60. If the entered book id is incorrect then the system shall be able to ask to reenter book i d.\n61. Prompts a message that book with book i d successfully returned.\n62. The system shall be able to stored members database.\n63. The system shall be able to retrieve available members.\n64. The system shall provide member with the ability to logged in.\n65. The system shall provide guest with the ability to also view members.\n66. The system shall provide user with the ability to click on view members.\n67. The system shall be able to open a page showing the details of the member.\n68. The system shall provide member with the ability to issued return paidThe system shall provide member with the ability to close the page.\n69. The system shall be able to loggedThe system shall be able to remove available books.\n70. The system shall be able to add available book details  or  remove  books  database.\n71. The system shall provide librarian with the ability to have option of adding or removing a book in database.\n72. The system shall be able to ask librarian to add or remove the book.\n73. The system shall provide librarian with the ability to add a book.\n74. The system shall be able to ask librarian to enter all the required details about the new book to added.\n75. The system shall provide librarian with the ability to enter the details.\n76. If the librarian selects to remove a book then the system shall be able to outdate book be.\n77. The system administrator that all the information has been correctly provided.\n78. The system shall provide administrator with the ability to logged in.\n79. The system shall provide member with the ability to available to remove.\n80. The system shall provide member with the ability to add remove in.\n81. The system shall be able to ask administrator to add or remove a member.\n82. The system shall provide administrator with the ability to select to add a member.\n83. The system shall be able to ask administrator to enter all the required details about the new member to added.\n84. The system shall provide administrator with the ability to enter the details.\n85. If the administrator selects to remove a member then the system shall be able to require a valid reason of removal.\n86. The system shall be able to validate that all the information correctly provided.\n87. "
    },
    "created_date": "2025-06-15T16:05:13.743569"
  },
  "7662747b-a62f-4b88-aba5-ecc6c8d4e839": {
    "id": "7662747b-a62f-4b88-aba5-ecc6c8d4e839",
    "timestamp": "2025-06-15T16:05:50.027131",
    "type": "sequence",
    "plantuml_code": "@startuml\nactor member\nactor librarian\nactor user\nactor guest\nactor administrator\nparticipant system\nmember -> system: click login button\nsystem -> member: display log in page\nmember -> system: enter login id and password\nmember -> system: click confirm button\nalt entered information is wrong\nsystem -> member: ask to reenter details\nelse information is correct\nsystem -> system: validate entered information against database\nsystem -> member: logged in\nmember -> system: click view user details\nsystem -> member: open page showing member details\nsystem -> member: include total fine details, issued books, date issue, return date, paid\nmember -> system: close page\nsystem -> member: show ok message\nsystem -> system: store books in database\nsystem -> system: retrieve ready books\nsystem -> user: ask to login\nsystem -> system: identify type of user\nsystem -> system: show categories to browse\nuser -> system: select category of books to view\nsystem -> user: show details of selected books\nuser -> system: print details\nalt user wants to print details\nsystem -> user: ask to reserve a book\nuser -> system: input relevant details to reserve\nelse user does not want to print details\nsystem -> system: ignore user step\nend\nmember -> system: logged in\nsystem -> system: search books\nsystem -> system: search available books\nsystem -> system: show categories to browse\nmember -> system: select category for searching a book\nsystem -> member: give member id to librarian\nlibrarian -> system: check availability of books\nlibrarian -> system: check total number of books issued\nlibrarian -> system: issue book\nsystem -> member: borrow books\nmember -> librarian: give member id\nmember -> system: return book\nlibrarian -> system: enter book id, member id\nalt entered book id is incorrect\nsystem -> librarian: ask to reenter book id\nelse book id is correct\nsystem -> system: store members database\nsystem -> system: retrieve available members\nsystem -> member: logged in\nend\nguest -> system: view members\nsystem -> guest: open page showing member details\nmember -> system: close page\nsystem -> system: remove available books\nsystem -> system: add or remove books in database\nlibrarian -> system: have option to add or remove a book\nsystem -> librarian: add a book\nlibrarian -> system: enter details about new book\nsystem -> administrator: validate all information provided\nadministrator -> system: logged in\nmember -> system: available to remove\nmember -> system: add remove in\nsystem -> administrator: add or remove a member\nadministrator -> system: select to add a member\nsystem -> administrator: enter details about new member\nadministrator -> system: require valid reason of removal\nsystem -> system: validate all information provided\nend\n@enduml",
    "snl_data": {
      "snl_text": "The system shall provide member with the ability to click the login button on the home page. The system shall be able to display the log in page. The system shall provide member with the ability to enter his login i d with password. The system shall provide member with the ability to click on the confirm button. The system shall be able to check that all of the required information entered. If the entered information is wrong then the system shall be able to ask member to reenter details. The system shall be able to validate the entered information against the tables stored in the database. The system shall provide member with the ability to logged in. The system shall provide member with the ability to click on view user details. The system shall be able to open a page showing the details of the member. The system shall be able to include total fine details number  issued  books ,  date  issue ,  return  date ,  paid. The system shall provide member with the ability to close the page. The system shall be able to show ok message. The system shall be able to stored books database. The system shall be able to retrieve ready books. The system shall be able to ask user to login. The system shall be able to identify the type of user member , guest or administrator. The system shall be able to show the categories to browse. The system shall provide user with the ability to select a category of books to view. If no category is selected by the user then the system shall be able to select again asks user to select a category. The system shall be able to check the books in the database. The system shall be able to retrieve all the books falling in that category. The system shall provide user with the ability to select the desired books. The system shall be able to show the details of the selected books. The system shall be able to ask user to print the details. If user does not want to print the details then the system shall be able to ignore user step. The system shall provide user with the ability to reserve a book by inputting the relevant details. The system shall provide librarian with the ability to also reserve a book for a member. The system shall provide user with the ability to logged in. The system shall provide user with the ability to have correct book i d. Books available to reserve. The system shall be able to ask user to login. The system shall be able to identify the type of user member , guest or administrator. The system shall be able to show the categories to browse. The system shall provide user with the ability to select book to reserve. If no book is selected by the user then the system shall be able to select again asks user to select a book to reserve. The system shall provide user with the ability to enter book i d to reserve. If the book id is wrong then the system shall be able to be asks user to recheck bookThe system shall be able to d. Books database. If the selected book is already reserved on another id then the system shall be able to d asks user to select another book. The system shall be able to logged members. The system shall be able to search books. The system shall be able to search available book. The system shall be able to show the categories to browse. The system shall provide member with the ability to select a category of searching a book. If no category is selected by the member then the system shall be able to ask again user to select a category. The system shall be able to check the books in the database. The system shall be able to retrieve all the books falling in that category. The system shall provide member with the ability to give the member i d to the librarian. The system shall be able to available books issue. The system shall provide librarian with the ability to check the availability of the books. The librarian also checks total number of books issued on that id. Librarian issues the book. The system shall provide user with the ability to not issue the books if the has three books issued on his i d. The system shall be able to update the information in database. The system shall be able to loggedThe system shall provide member with the ability to borrow books. The system shall provide member with the ability to give the member i d to the librarian. The system shall provide member with the ability to return the book. The system shall provide librarian with the ability to enter book i d , member i d in the system. If the entered book id is incorrect then the system shall be able to ask to reenter book i d. Prompts a message that book with book i d successfully returned. The system shall be able to stored members database. The system shall be able to retrieve available members. The system shall provide member with the ability to logged in. The system shall provide guest with the ability to also view members. The system shall provide user with the ability to click on view members. The system shall be able to open a page showing the details of the member. The system shall provide member with the ability to issued return paidThe system shall provide member with the ability to close the page. The system shall be able to loggedThe system shall be able to remove available books. The system shall be able to add available book details  or  remove  books  database. The system shall provide librarian with the ability to have option of adding or removing a book in database. The system shall be able to ask librarian to add or remove the book. The system shall provide librarian with the ability to add a book. The system shall be able to ask librarian to enter all the required details about the new book to added. The system shall provide librarian with the ability to enter the details. If the librarian selects to remove a book then the system shall be able to outdate book be. The system administrator that all the information has been correctly provided. The system shall provide administrator with the ability to logged in. The system shall provide member with the ability to available to remove. The system shall provide member with the ability to add remove in. The system shall be able to ask administrator to add or remove a member. The system shall provide administrator with the ability to select to add a member. The system shall be able to ask administrator to enter all the required details about the new member to added. The system shall provide administrator with the ability to enter the details. If the administrator selects to remove a member then the system shall be able to require a valid reason of removal. The system shall be able to validate that all the information correctly provided. ",
      "actors": [
        "member",
        "librarian",
        "view",
        "id.",
        "user",
        "guest",
        "administrator",
        "system"
      ],
      "preprocessed_text": "the member clicks the login button on the home page. the system displays the log in page. the member enters his login id with password. the member clicks on the confirm button. the system checks that all of the required information was entered. if the entered information is wrong then system asks member to reenter the details. the system validates the entered information against the tables stored in the database. member must be logged in to the system. the member clicks on view user details. the system opens a page showing the details of the member. the details include the total number of issued books, date of issue, return date, fine to be paid. the member closes the page. the system shows ok message. the books should be stored in database. the books must be ready to retrieve. the system asks user to login. the system identifies the type of user member, guest or administrator. the system shows the categories to browse. the user selects a category of books to view. if no category is selected by the user then the system again asks user to select a category. the system checks the books in the database. the system retrieves all the books falling in that category. the user selects the desired books. the system shows the details of the selected books. the system asks user to print the details. if user does not want to print the details then user can ignore the step. user can reserve a book by inputting the relevant details. the librarian can also reserve a book for a member. user should be logged in to the system. user should have correct book id. books should be available to reserve. the system asks user to login. the system identifies the type of user member, guest or administrator. the system shows the categories to browse. the user selects book to reserve. if no book is selected by the user then the system again asks user to select a book to reserve. the user enters book id to reserve. if the book id is wrong then system asks user to recheck the book id. the system checks the books in the database. if the selected book is already reserved on another id then system asks user to select another book. members should be logged in to the system. guest_user can also search books. book should be available to search. the system shows the categories to browse. the member selects a category of searching a book. if no category is selected by the member then the system again asks user to select a category. the system checks the books in the database. the system retrieves all the books falling in that category. member should give the member id to the librarian. books should be available to issue. the librarian checks the availability of the books. the librarian also checks total number of books issued on that id. librarian issues the book. the librarian cannot issue the books if the user has three books issued on his id. the system updates the information in database. librarian should be logged in to the system. member should have borrowed books. member should give the member id to the librarian. the member returns the book. the librarian enters book id , member id in the system. if the entered book id is incorrect then system asks to reenter the book id. the system prompts a message that the book with book id is successfully returned. members should be stored in the database. members should be available to retrieve by the system. member must be logged in to the system. guest can also view members. the user clicks on view members. the system opens a page showing the details of the member. the details include name of member, the total number of issued books, date of issue, return date, fine to be paid. the member closes the page. librarian should be logged in to the system. books should be available to remove. book details should be available to add or remove books in the database. the librarian has option of adding or removing a book in database. the system asks librarian to add or remove the book. the librarian adds a book. the system asks librarian to enter all the required details about the new book to be added. the librarian enters the details. if the librarian selects to remove a book then the book should be outdated. the system administrator that all the information has been correctly provided. administrator should be logged in to the system. member should be available to remove. member details should be available to add or remove member in the database. the system asks administrator to add or remove a member. the administrator selects to add a member. the system asks administrator to enter all the required details about the new member to be added. the administrator enters the details. if the administrator selects to remove a member then a valid reason of removal is required. the system validates that all the information has been correctly provided.",
      "sentences_count": 86,
      "formatted_sentences": "1. The system shall provide member with the ability to click the login button on the home page.\n2. The system shall be able to display the log in page.\n3. The system shall provide member with the ability to enter his login i d with password.\n4. The system shall provide member with the ability to click on the confirm button.\n5. The system shall be able to check that all of the required information entered.\n6. If the entered information is wrong then the system shall be able to ask member to reenter details.\n7. The system shall be able to validate the entered information against the tables stored in the database.\n8. The system shall provide member with the ability to logged in.\n9. The system shall provide member with the ability to click on view user details.\n10. The system shall be able to open a page showing the details of the member.\n11. The system shall be able to include total fine details number  issued  books ,  date  issue ,  return  date ,  paid.\n12. The system shall provide member with the ability to close the page.\n13. The system shall be able to show ok message.\n14. The system shall be able to stored books database.\n15. The system shall be able to retrieve ready books.\n16. The system shall be able to ask user to login.\n17. The system shall be able to identify the type of user member , guest or administrator.\n18. The system shall be able to show the categories to browse.\n19. The system shall provide user with the ability to select a category of books to view.\n20. If no category is selected by the user then the system shall be able to select again asks user to select a category.\n21. The system shall be able to check the books in the database.\n22. The system shall be able to retrieve all the books falling in that category.\n23. The system shall provide user with the ability to select the desired books.\n24. The system shall be able to show the details of the selected books.\n25. The system shall be able to ask user to print the details.\n26. If user does not want to print the details then the system shall be able to ignore user step.\n27. The system shall provide user with the ability to reserve a book by inputting the relevant details.\n28. The system shall provide librarian with the ability to also reserve a book for a member.\n29. The system shall provide user with the ability to logged in.\n30. The system shall provide user with the ability to have correct book i d.\n31. Books available to reserve.\n32. The system shall be able to ask user to login.\n33. The system shall be able to identify the type of user member , guest or administrator.\n34. The system shall be able to show the categories to browse.\n35. The system shall provide user with the ability to select book to reserve.\n36. If no book is selected by the user then the system shall be able to select again asks user to select a book to reserve.\n37. The system shall provide user with the ability to enter book i d to reserve.\n38. If the book id is wrong then the system shall be able to be asks user to recheck bookThe system shall be able to d.\n39. Books database.\n40. If the selected book is already reserved on another id then the system shall be able to d asks user to select another book.\n41. The system shall be able to logged members.\n42. The system shall be able to search books.\n43. The system shall be able to search available book.\n44. The system shall be able to show the categories to browse.\n45. The system shall provide member with the ability to select a category of searching a book.\n46. If no category is selected by the member then the system shall be able to ask again user to select a category.\n47. The system shall be able to check the books in the database.\n48. The system shall be able to retrieve all the books falling in that category.\n49. The system shall provide member with the ability to give the member i d to the librarian.\n50. The system shall be able to available books issue.\n51. The system shall provide librarian with the ability to check the availability of the books.\n52. The librarian also checks total number of books issued on that id.\n53. Librarian issues the book.\n54. The system shall provide user with the ability to not issue the books if the has three books issued on his i d.\n55. The system shall be able to update the information in database.\n56. The system shall be able to loggedThe system shall provide member with the ability to borrow books.\n57. The system shall provide member with the ability to give the member i d to the librarian.\n58. The system shall provide member with the ability to return the book.\n59. The system shall provide librarian with the ability to enter book i d , member i d in the system.\n60. If the entered book id is incorrect then the system shall be able to ask to reenter book i d.\n61. Prompts a message that book with book i d successfully returned.\n62. The system shall be able to stored members database.\n63. The system shall be able to retrieve available members.\n64. The system shall provide member with the ability to logged in.\n65. The system shall provide guest with the ability to also view members.\n66. The system shall provide user with the ability to click on view members.\n67. The system shall be able to open a page showing the details of the member.\n68. The system shall provide member with the ability to issued return paidThe system shall provide member with the ability to close the page.\n69. The system shall be able to loggedThe system shall be able to remove available books.\n70. The system shall be able to add available book details  or  remove  books  database.\n71. The system shall provide librarian with the ability to have option of adding or removing a book in database.\n72. The system shall be able to ask librarian to add or remove the book.\n73. The system shall provide librarian with the ability to add a book.\n74. The system shall be able to ask librarian to enter all the required details about the new book to added.\n75. The system shall provide librarian with the ability to enter the details.\n76. If the librarian selects to remove a book then the system shall be able to outdate book be.\n77. The system administrator that all the information has been correctly provided.\n78. The system shall provide administrator with the ability to logged in.\n79. The system shall provide member with the ability to available to remove.\n80. The system shall provide member with the ability to add remove in.\n81. The system shall be able to ask administrator to add or remove a member.\n82. The system shall provide administrator with the ability to select to add a member.\n83. The system shall be able to ask administrator to enter all the required details about the new member to added.\n84. The system shall provide administrator with the ability to enter the details.\n85. If the administrator selects to remove a member then the system shall be able to require a valid reason of removal.\n86. The system shall be able to validate that all the information correctly provided.\n87. "
    },
    "created_date": "2025-06-15T16:05:50.027131"
  },
  "db80f8c1-ccc4-464c-8ef8-85c3af98aa85": {
    "id": "db80f8c1-ccc4-464c-8ef8-85c3af98aa85",
    "timestamp": "2025-06-15T16:06:35.603437",
    "type": "class",
    "plantuml_code": "@startuml\nclass System {\n+ displayLoginPage()\n+ validateLoginInfo()\n+ validateUserType()\n+ showCategoriesToBrowse()\n+ selectCategory()\n+ searchBooks()\n+ issueBook()\n+ returnBook()\n+ addBook()\n+ removeBook()\n+ addMember()\n+ removeMember()\n+ validateInformation()\n}\nclass User {\n+ login()\n+ viewUserDetails()\n+ selectBookToReserve()\n+ enterBookIDToReserve()\n+ searchBookCategory()\n+ giveMemberIDToLibrarian()\n+ borrowBook()\n+ returnBook()\n+ viewMembers()\n}\nclass Member {\n+ viewUserDetails()\n+ closePage()\n+ issueReturnPaid()\n+ logged()\n+ addRemoveIn()\n}\nclass Librarian {\n+ reserveBook()\n+ checkBookAvailability()\n+ issueBook()\n}\nclass Guest {\n+ viewMembers()\n}\nclass Administrator {\n+ addMember()\n+ removeMember()\n}\nclass Database {\n+ validateInformation()\n+ storeBooks()\n+ retrieveBooks()\n+ storeMembers()\n+ retrieveMembers()\n}\nSystem \"1\" --> \"1\" Database\nSystem \"1\" --> \"1\" User\nSystem \"1\" --> \"1\" Librarian\nSystem \"1\" --> \"1\" Guest\nSystem \"1\" --> \"1\" Administrator\nUser \"1\" --> \"1\" Member\nUser \"1\" --> \"1\" Guest\nMember \"1\" --> \"1\" User\nLibrarian \"1\" --> \"1\" Member\nAdministrator \"1\" --> \"1\" Member\n@enduml",
    "snl_data": {
      "snl_text": "The system shall provide member with the ability to click the login button on the home page. The system shall be able to display the log in page. The system shall provide member with the ability to enter his login i d with password. The system shall provide member with the ability to click on the confirm button. The system shall be able to check that all of the required information entered. If the entered information is wrong then the system shall be able to ask member to reenter details. The system shall be able to validate the entered information against the tables stored in the database. The system shall provide member with the ability to logged in. The system shall provide member with the ability to click on view user details. The system shall be able to open a page showing the details of the member. The system shall be able to include total fine details number  issued  books ,  date  issue ,  return  date ,  paid. The system shall provide member with the ability to close the page. The system shall be able to show ok message. The system shall be able to stored books database. The system shall be able to retrieve ready books. The system shall be able to ask user to login. The system shall be able to identify the type of user member , guest or administrator. The system shall be able to show the categories to browse. The system shall provide user with the ability to select a category of books to view. If no category is selected by the user then the system shall be able to select again asks user to select a category. The system shall be able to check the books in the database. The system shall be able to retrieve all the books falling in that category. The system shall provide user with the ability to select the desired books. The system shall be able to show the details of the selected books. The system shall be able to ask user to print the details. If user does not want to print the details then the system shall be able to ignore user step. The system shall provide user with the ability to reserve a book by inputting the relevant details. The system shall provide librarian with the ability to also reserve a book for a member. The system shall provide user with the ability to logged in. The system shall provide user with the ability to have correct book i d. Books available to reserve. The system shall be able to ask user to login. The system shall be able to identify the type of user member , guest or administrator. The system shall be able to show the categories to browse. The system shall provide user with the ability to select book to reserve. If no book is selected by the user then the system shall be able to select again asks user to select a book to reserve. The system shall provide user with the ability to enter book i d to reserve. If the book id is wrong then the system shall be able to be asks user to recheck bookThe system shall be able to d. Books database. If the selected book is already reserved on another id then the system shall be able to d asks user to select another book. The system shall be able to logged members. The system shall be able to search books. The system shall be able to search available book. The system shall be able to show the categories to browse. The system shall provide member with the ability to select a category of searching a book. If no category is selected by the member then the system shall be able to ask again user to select a category. The system shall be able to check the books in the database. The system shall be able to retrieve all the books falling in that category. The system shall provide member with the ability to give the member i d to the librarian. The system shall be able to available books issue. The system shall provide librarian with the ability to check the availability of the books. The librarian also checks total number of books issued on that id. Librarian issues the book. The system shall provide user with the ability to not issue the books if the has three books issued on his i d. The system shall be able to update the information in database. The system shall be able to loggedThe system shall provide member with the ability to borrow books. The system shall provide member with the ability to give the member i d to the librarian. The system shall provide member with the ability to return the book. The system shall provide librarian with the ability to enter book i d , member i d in the system. If the entered book id is incorrect then the system shall be able to ask to reenter book i d. Prompts a message that book with book i d successfully returned. The system shall be able to stored members database. The system shall be able to retrieve available members. The system shall provide member with the ability to logged in. The system shall provide guest with the ability to also view members. The system shall provide user with the ability to click on view members. The system shall be able to open a page showing the details of the member. The system shall provide member with the ability to issued return paidThe system shall provide member with the ability to close the page. The system shall be able to loggedThe system shall be able to remove available books. The system shall be able to add available book details  or  remove  books  database. The system shall provide librarian with the ability to have option of adding or removing a book in database. The system shall be able to ask librarian to add or remove the book. The system shall provide librarian with the ability to add a book. The system shall be able to ask librarian to enter all the required details about the new book to added. The system shall provide librarian with the ability to enter the details. If the librarian selects to remove a book then the system shall be able to outdate book be. The system administrator that all the information has been correctly provided. The system shall provide administrator with the ability to logged in. The system shall provide member with the ability to available to remove. The system shall provide member with the ability to add remove in. The system shall be able to ask administrator to add or remove a member. The system shall provide administrator with the ability to select to add a member. The system shall be able to ask administrator to enter all the required details about the new member to added. The system shall provide administrator with the ability to enter the details. If the administrator selects to remove a member then the system shall be able to require a valid reason of removal. The system shall be able to validate that all the information correctly provided. ",
      "actors": [
        "member",
        "librarian",
        "view",
        "id.",
        "user",
        "guest",
        "administrator",
        "system"
      ],
      "preprocessed_text": "the member clicks the login button on the home page. the system displays the log in page. the member enters his login id with password. the member clicks on the confirm button. the system checks that all of the required information was entered. if the entered information is wrong then system asks member to reenter the details. the system validates the entered information against the tables stored in the database. member must be logged in to the system. the member clicks on view user details. the system opens a page showing the details of the member. the details include the total number of issued books, date of issue, return date, fine to be paid. the member closes the page. the system shows ok message. the books should be stored in database. the books must be ready to retrieve. the system asks user to login. the system identifies the type of user member, guest or administrator. the system shows the categories to browse. the user selects a category of books to view. if no category is selected by the user then the system again asks user to select a category. the system checks the books in the database. the system retrieves all the books falling in that category. the user selects the desired books. the system shows the details of the selected books. the system asks user to print the details. if user does not want to print the details then user can ignore the step. user can reserve a book by inputting the relevant details. the librarian can also reserve a book for a member. user should be logged in to the system. user should have correct book id. books should be available to reserve. the system asks user to login. the system identifies the type of user member, guest or administrator. the system shows the categories to browse. the user selects book to reserve. if no book is selected by the user then the system again asks user to select a book to reserve. the user enters book id to reserve. if the book id is wrong then system asks user to recheck the book id. the system checks the books in the database. if the selected book is already reserved on another id then system asks user to select another book. members should be logged in to the system. guest_user can also search books. book should be available to search. the system shows the categories to browse. the member selects a category of searching a book. if no category is selected by the member then the system again asks user to select a category. the system checks the books in the database. the system retrieves all the books falling in that category. member should give the member id to the librarian. books should be available to issue. the librarian checks the availability of the books. the librarian also checks total number of books issued on that id. librarian issues the book. the librarian cannot issue the books if the user has three books issued on his id. the system updates the information in database. librarian should be logged in to the system. member should have borrowed books. member should give the member id to the librarian. the member returns the book. the librarian enters book id , member id in the system. if the entered book id is incorrect then system asks to reenter the book id. the system prompts a message that the book with book id is successfully returned. members should be stored in the database. members should be available to retrieve by the system. member must be logged in to the system. guest can also view members. the user clicks on view members. the system opens a page showing the details of the member. the details include name of member, the total number of issued books, date of issue, return date, fine to be paid. the member closes the page. librarian should be logged in to the system. books should be available to remove. book details should be available to add or remove books in the database. the librarian has option of adding or removing a book in database. the system asks librarian to add or remove the book. the librarian adds a book. the system asks librarian to enter all the required details about the new book to be added. the librarian enters the details. if the librarian selects to remove a book then the book should be outdated. the system administrator that all the information has been correctly provided. administrator should be logged in to the system. member should be available to remove. member details should be available to add or remove member in the database. the system asks administrator to add or remove a member. the administrator selects to add a member. the system asks administrator to enter all the required details about the new member to be added. the administrator enters the details. if the administrator selects to remove a member then a valid reason of removal is required. the system validates that all the information has been correctly provided.",
      "sentences_count": 86,
      "formatted_sentences": "1. The system shall provide member with the ability to click the login button on the home page.\n2. The system shall be able to display the log in page.\n3. The system shall provide member with the ability to enter his login i d with password.\n4. The system shall provide member with the ability to click on the confirm button.\n5. The system shall be able to check that all of the required information entered.\n6. If the entered information is wrong then the system shall be able to ask member to reenter details.\n7. The system shall be able to validate the entered information against the tables stored in the database.\n8. The system shall provide member with the ability to logged in.\n9. The system shall provide member with the ability to click on view user details.\n10. The system shall be able to open a page showing the details of the member.\n11. The system shall be able to include total fine details number  issued  books ,  date  issue ,  return  date ,  paid.\n12. The system shall provide member with the ability to close the page.\n13. The system shall be able to show ok message.\n14. The system shall be able to stored books database.\n15. The system shall be able to retrieve ready books.\n16. The system shall be able to ask user to login.\n17. The system shall be able to identify the type of user member , guest or administrator.\n18. The system shall be able to show the categories to browse.\n19. The system shall provide user with the ability to select a category of books to view.\n20. If no category is selected by the user then the system shall be able to select again asks user to select a category.\n21. The system shall be able to check the books in the database.\n22. The system shall be able to retrieve all the books falling in that category.\n23. The system shall provide user with the ability to select the desired books.\n24. The system shall be able to show the details of the selected books.\n25. The system shall be able to ask user to print the details.\n26. If user does not want to print the details then the system shall be able to ignore user step.\n27. The system shall provide user with the ability to reserve a book by inputting the relevant details.\n28. The system shall provide librarian with the ability to also reserve a book for a member.\n29. The system shall provide user with the ability to logged in.\n30. The system shall provide user with the ability to have correct book i d.\n31. Books available to reserve.\n32. The system shall be able to ask user to login.\n33. The system shall be able to identify the type of user member , guest or administrator.\n34. The system shall be able to show the categories to browse.\n35. The system shall provide user with the ability to select book to reserve.\n36. If no book is selected by the user then the system shall be able to select again asks user to select a book to reserve.\n37. The system shall provide user with the ability to enter book i d to reserve.\n38. If the book id is wrong then the system shall be able to be asks user to recheck bookThe system shall be able to d.\n39. Books database.\n40. If the selected book is already reserved on another id then the system shall be able to d asks user to select another book.\n41. The system shall be able to logged members.\n42. The system shall be able to search books.\n43. The system shall be able to search available book.\n44. The system shall be able to show the categories to browse.\n45. The system shall provide member with the ability to select a category of searching a book.\n46. If no category is selected by the member then the system shall be able to ask again user to select a category.\n47. The system shall be able to check the books in the database.\n48. The system shall be able to retrieve all the books falling in that category.\n49. The system shall provide member with the ability to give the member i d to the librarian.\n50. The system shall be able to available books issue.\n51. The system shall provide librarian with the ability to check the availability of the books.\n52. The librarian also checks total number of books issued on that id.\n53. Librarian issues the book.\n54. The system shall provide user with the ability to not issue the books if the has three books issued on his i d.\n55. The system shall be able to update the information in database.\n56. The system shall be able to loggedThe system shall provide member with the ability to borrow books.\n57. The system shall provide member with the ability to give the member i d to the librarian.\n58. The system shall provide member with the ability to return the book.\n59. The system shall provide librarian with the ability to enter book i d , member i d in the system.\n60. If the entered book id is incorrect then the system shall be able to ask to reenter book i d.\n61. Prompts a message that book with book i d successfully returned.\n62. The system shall be able to stored members database.\n63. The system shall be able to retrieve available members.\n64. The system shall provide member with the ability to logged in.\n65. The system shall provide guest with the ability to also view members.\n66. The system shall provide user with the ability to click on view members.\n67. The system shall be able to open a page showing the details of the member.\n68. The system shall provide member with the ability to issued return paidThe system shall provide member with the ability to close the page.\n69. The system shall be able to loggedThe system shall be able to remove available books.\n70. The system shall be able to add available book details  or  remove  books  database.\n71. The system shall provide librarian with the ability to have option of adding or removing a book in database.\n72. The system shall be able to ask librarian to add or remove the book.\n73. The system shall provide librarian with the ability to add a book.\n74. The system shall be able to ask librarian to enter all the required details about the new book to added.\n75. The system shall provide librarian with the ability to enter the details.\n76. If the librarian selects to remove a book then the system shall be able to outdate book be.\n77. The system administrator that all the information has been correctly provided.\n78. The system shall provide administrator with the ability to logged in.\n79. The system shall provide member with the ability to available to remove.\n80. The system shall provide member with the ability to add remove in.\n81. The system shall be able to ask administrator to add or remove a member.\n82. The system shall provide administrator with the ability to select to add a member.\n83. The system shall be able to ask administrator to enter all the required details about the new member to added.\n84. The system shall provide administrator with the ability to enter the details.\n85. If the administrator selects to remove a member then the system shall be able to require a valid reason of removal.\n86. The system shall be able to validate that all the information correctly provided.\n87. "
    },
    "created_date": "2025-06-15T16:06:35.603437"
  }
}
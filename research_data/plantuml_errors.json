{
  "e06c4fa3-c619-4f71-99d3-b0e89bd3a202": {
    "id": "e06c4fa3-c619-4f71-99d3-b0e89bd3a202",
    "timestamp": "2025-07-16T01:04:37.180559",
    "diagram_type": "class",
    "error_type": "syntax_validation",
    "error_message": "PlantUML syntax errors: PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'",
    "plantuml_code": "@startuml\n' User base class\nclass User {\n-userId: string\n-name: string\n-email: string\n-password: string\n+login(loginId: string, password: string): boolean\n+logout(): void\n+viewDetails(): string\n+updateProfile(name: string, email: string): void\n}\n' Member inherits from User\nclass Member {\n-membershipId: string\n-address: string\n-phoneNumber: string\n-isLoggedIn: boolean\n+clickLoginButton(): void\n+enterCredentials(loginId: string, password: string): void\n+confirmLogin(): boolean\n+viewUserDetails(): string\n+reenterDetails(): void\n}\n' Librarian inherits from User\nclass Librarian {\n-employeeId: string\n-workShift: string\n-contactNumber: string\n+addBook(book: Book): void\n+removeBook(bookId: string): void\n+manageMember(member: Member): void\n+viewAllBooks(): void\n}\n' Administrator inherits from User\nclass Administrator {\n-adminLevel: int\n-permissions: string\n-lastLogin: string\n+addUser(user: User): void\n+removeUser(userId: string): void\n+resetPassword(userId: string): void\n}\n' Guest class\nclass Guest {\n-sessionId: string\n-visitTime: string\n-ipAddress: string\n+browseCatalog(): void\n+registerAccount(name: string, email: string): void\n+viewBookDetails(bookId: string): string\n+searchBooks(keyword: string): void\n}\n' Book class\nclass Book {\n-bookId: string\n-title: string\n-author: string\n-isAvailable: boolean\n-isbn: string\n+checkAvailability(): boolean\n+reserveBook(member: Member): boolean\n+getDetails(): string\n+updateStatus(isAvailable: boolean): void\n}\n' Inheritance relationships\n' Associations\nUser <|-- Member : extends\nUser <|-- Librarian : extends\nUser <|-- Administrator : extends\nMember --> \"1\" User : isA\nLibrarian --> \"0..*\" Book : manages\nAdministrator --> \"0..*\" User : administers\nGuest --> \"0..*\" Book : views\nMember --> \"0..*\" Book : borrows\nBook --> \"1\" Librarian : catalogedBy\n@enduml",
    "retry_count": 0,
    "validation_status": {
      "is_valid": false,
      "errors": [
        "PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'"
      ]
    },
    "stored_date": "2025-07-16T01:04:37.180559"
  },
  "623ed4fe-db06-4629-8ba6-6c4396f14b03": {
    "id": "623ed4fe-db06-4629-8ba6-6c4396f14b03",
    "timestamp": "2025-07-16T01:04:40.439065",
    "diagram_type": "sequence",
    "error_type": "syntax_validation",
    "error_message": "PlantUML syntax errors: PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'",
    "plantuml_code": "@startuml\n' Participant Declarations\nactor Guest\nactor Librarian\nactor Member\nparticipant Book\nactor User\nactor Administrator\n== Login Process ==\ngroup Member initiates login\nMember -> User : Clicks \"LogIn\" on Home Page\nactivate User\nUser --> Member : Displays Login Page\ndeactivate User\nend\ngroup Member enters credentials\nMember -> User : Enters LoginId and Password\nactivate User\nUser --> Member : Receives credentials\ndeactivate User\nend\ngroup Member confirms login\nMember -> User : Clicks \"Confirm\"\nactivate User\nalt Missing Information\nUser --> Member : Prompt to re-enter required details\ndeactivate User\nbreak\nelse All Information Entered\nUser -> Book : Validate credentials against records\nactivate Book\nalt Invalid Credentials\nBook --> User : Invalid credentials\ndeactivate Book\nUser --> Member : Ask to re-enter details\ndeactivate User\nbreak\nelse Valid Credentials\nBook --> User : Credentials valid\ndeactivate Book\nUser --> Member : Login successful\ndeactivate User\nend\nend\nend\n== Post-Login Actions ==\ngroup Member views user details\nMember -> User : Clicks \"ViewUserDetails\"\nactivate User\nUser -> Librarian : Request user details\nactivate Librarian\nLibrarian --> User : Provide user details\ndeactivate Librarian\nUser --> Member : Display user details\ndeactivate User\nend\n== Administrator and Guest Interactions ==\npar Administrator and Guest parallel actions\ngroup Administrator checks login activity\nAdministrator -> User : Request login activity report\nactivate User\nUser --> Administrator : Provide login activity report\ndeactivate User\nend\ngroup Guest browses books\nGuest -> Book : Browse available books\nactivate Book\nBook --> Guest : Display book list\ndeactivate Book\nend\nend\n== Librarian Book Management ==\ngroup Librarian manages books\nLibrarian -> Book : Update book information\nactivate Book\nBook --> Librarian : Confirm update\ndeactivate Book\nend\n@enduml",
    "retry_count": 0,
    "validation_status": {
      "is_valid": false,
      "errors": [
        "PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'"
      ]
    },
    "stored_date": "2025-07-16T01:04:40.439065"
  }
}
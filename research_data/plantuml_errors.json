{
  "ce29a33b-da95-4842-9ad9-478b03f2272d": {
    "id": "ce29a33b-da95-4842-9ad9-478b03f2272d",
    "timestamp": "2025-07-13T12:55:53.922190",
    "diagram_type": "class",
    "error_type": "syntax_validation",
    "error_message": "PlantUML syntax errors: PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'",
    "plantuml_code": "@startuml\n' User base class\nclass User {\n-userId: string\n+name: string\n+email: string\n-password: string\n+isActive: boolean\n+login(password: string): boolean\n+logout(): void\n+updateProfile(name: string, email: string): void\n+viewProfile(): string\n}\n' Member inherits from User\nclass Member {\n+membershipId: string\n+address: string\n+phoneNumber: string\n+membershipStatus: string\n+borrowedBooksCount: int\n+viewUserDetails(): string\n+borrowBook(book: Book): boolean\n+returnBook(book: Book): boolean\n+renewMembership(): boolean\n}\n' Librarian inherits from User\nclass Librarian {\n+employeeId: string\n+workShift: string\n+contactNumber: string\n+assignedSection: string\n+isOnDuty: boolean\n+addBook(book: Book): void\n+removeBook(book: Book): void\n+manageMember(member: Member): void\n+generateReport(): string\n}\n' Guest inherits from User\nclass Guest {\n+guestId: string\n+visitDate: Date\n+purpose: string\n+isRegistered: boolean\n+register(): boolean\n+requestMembership(): boolean\n+searchBooks(keyword: string): Book\n+viewCatalog(): void\n}\n' Administrator inherits from User\nclass Administrator {\n+adminId: string\n+role: string\n+accessLevel: int\n+lastLogin: Date\n+isSuperAdmin: boolean\n+manageUser(user: User): void\n+resetPassword(user: User): void\n+viewLogs(): string\n}\n' Book class\nclass Book {\n+bookId: string\n+title: string\n+author: string\n+isAvailable: boolean\n+publicationYear: int\n+borrow(): boolean\n+returnBook(): boolean\n+reserve(member: Member): boolean\n+getDetails(): string\n}\n' Inheritance relationships\n' Associations\nUser <|-- Member : extends\nUser <|-- Librarian : extends\nUser <|-- Guest : extends\nUser <|-- Administrator : extends\nMember --> \"0..*\" Book : borrows\nLibrarian --> \"0..*\" Book : manages\nLibrarian --> \"0..*\" Member : manages\nAdministrator --> \"0..*\" User : administers\nGuest --> \"0..*\" Book : searches\nMember --> \"1\" User : is\nLibrarian --> \"1\" User : is\nAdministrator --> \"1\" User : is\nGuest --> \"1\" User : is\n@enduml",
    "retry_count": 0,
    "validation_status": {
      "is_valid": false,
      "errors": [
        "PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'"
      ]
    },
    "stored_date": "2025-07-13T12:55:53.922190"
  },
  "e871e405-979e-45c4-8a2b-20844148b9a6": {
    "id": "e871e405-979e-45c4-8a2b-20844148b9a6",
    "timestamp": "2025-07-13T12:55:53.924840",
    "diagram_type": "sequence",
    "error_type": "syntax_validation",
    "error_message": "PlantUML syntax errors: PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'",
    "plantuml_code": "@startuml\n' Participant Declarations\nactor Librarian\nactor Member\nactor User\nactor Guest\nactor Administrator\nparticipant Book\n== Login Process ==\ngroup Member initiates login\nactivate User\ndeactivate User\nend\ngroup Member enters credentials\nactivate User\nactivate User\nend\nalt Missing Information\ndeactivate User\nelse All Information Entered\nactivate Administrator\nalt Invalid Credentials\ndeactivate Administrator\ndeactivate User\nelse Valid Credentials\ndeactivate Administrator\ndeactivate User\nend\nend\n== Post-Login Actions ==\nopt Member is logged in\nactivate User\ndeactivate User\nend\n== Parallel Notifications ==\npar Notify Librarian\nactivate Librarian\ndeactivate Librarian\nand Notify Administrator\nactivate Administrator\ndeactivate Administrator\nend\n== Guest and Book Interactions ==\nopt Guest browsing books\nactivate Book\ndeactivate Book\nend\nopt Librarian manages book\nactivate Book\ndeactivate Book\nend\nopt Administrator audits book\nactivate Book\ndeactivate Book\nend\n== Reference to Book Management ==\nref over Librarian,Book : See \"Book Management\" Sequence Diagram\n@enduml",
    "retry_count": 0,
    "validation_status": {
      "is_valid": false,
      "errors": [
        "PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'"
      ]
    },
    "stored_date": "2025-07-13T12:55:53.924840"
  },
  "807cd0ef-cc6b-4838-a9a6-0cab99500351": {
    "id": "807cd0ef-cc6b-4838-a9a6-0cab99500351",
    "timestamp": "2025-07-13T12:55:56.567879",
    "diagram_type": "class",
    "error_type": "syntax_validation",
    "error_message": "PlantUML syntax errors: PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'",
    "plantuml_code": "@startuml\n' User base class\nclass User {\n-userId: string\n+name: string\n+email: string\n-password: string\n+isActive: boolean\n+login(password: string): boolean\n+logout(): void\n+updateProfile(name: string, email: string): void\n+viewProfile(): string\n}\n' Member inherits from User\nclass Member {\n+membershipId: string\n+address: string\n+phoneNumber: string\n+membershipStatus: string\n+borrowedBooksCount: int\n+viewUserDetails(): string\n+borrowBook(book: Book): boolean\n+returnBook(book: Book): boolean\n+renewMembership(): boolean\n}\n' Librarian inherits from User\nclass Librarian {\n+employeeId: string\n+workShift: string\n+contactNumber: string\n+assignedSection: string\n+isOnDuty: boolean\n+addBook(book: Book): void\n+removeBook(book: Book): void\n+manageMember(member: Member): void\n+generateReport(): string\n}\n' Guest inherits from User\nclass Guest {\n+guestId: string\n+visitDate: Date\n+purpose: string\n+isRegistered: boolean\n+register(): boolean\n+requestMembership(): boolean\n+searchBooks(keyword: string): Book\n+viewCatalog(): void\n}\n' Administrator inherits from User\nclass Administrator {\n+adminId: string\n+role: string\n+accessLevel: int\n+lastLogin: Date\n+isSuperAdmin: boolean\n+manageUser(user: User): void\n+resetPassword(user: User): void\n+viewLogs(): string\n}\n' Book class\nclass Book {\n+bookId: string\n+title: string\n+author: string\n+isAvailable: boolean\n+publicationYear: int\n+borrow(): boolean\n+returnBook(): boolean\n+reserve(member: Member): boolean\n+getDetails(): string\n}\n' Inheritance relationships\n' Associations\nUser <|-- Member : extends\nUser <|-- Librarian : extends\nUser <|-- Guest : extends\nUser <|-- Administrator : extends\nMember --> \"0..*\" Book : borrows\nLibrarian --> \"0..*\" Book : manages\nLibrarian --> \"0..*\" Member : manages\nAdministrator --> \"0..*\" User : administers\nGuest --> \"0..*\" Book : searches\nMember --> \"1\" User : is\nLibrarian --> \"1\" User : is\nAdministrator --> \"1\" User : is\nGuest --> \"1\" User : is\n@enduml",
    "retry_count": 0,
    "validation_status": {
      "is_valid": false,
      "errors": [
        "PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'"
      ]
    },
    "stored_date": "2025-07-13T12:55:56.567879"
  },
  "c29074e5-ab4e-4c03-b6d9-6f95eda57714": {
    "id": "c29074e5-ab4e-4c03-b6d9-6f95eda57714",
    "timestamp": "2025-07-13T12:55:59.802041",
    "diagram_type": "sequence",
    "error_type": "syntax_validation",
    "error_message": "PlantUML syntax errors: PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'",
    "plantuml_code": "@startuml\n' Participant Declarations\nactor Librarian\nactor Member\nactor User\nactor Guest\nactor Administrator\nparticipant Book\n== Login Process ==\ngroup Member initiates login\nactivate User\ndeactivate User\nend\ngroup Member enters credentials\nactivate User\nactivate User\nend\nalt Missing Information\ndeactivate User\nelse All Information Entered\nactivate Administrator\nalt Invalid Credentials\ndeactivate Administrator\ndeactivate User\nelse Valid Credentials\ndeactivate Administrator\ndeactivate User\nend\nend\n== Post-Login Actions ==\nopt Member is logged in\nactivate User\ndeactivate User\nend\n== Parallel Notifications ==\npar Notify Librarian\nactivate Librarian\ndeactivate Librarian\nand Notify Administrator\nactivate Administrator\ndeactivate Administrator\nend\n== Guest and Book Interactions ==\nopt Guest browsing books\nactivate Book\ndeactivate Book\nend\nopt Librarian manages book\nactivate Book\ndeactivate Book\nend\nopt Administrator audits book\nactivate Book\ndeactivate Book\nend\n== Reference to Book Management ==\nref over Librarian,Book : See \"Book Management\" Sequence Diagram\n@enduml",
    "retry_count": 0,
    "validation_status": {
      "is_valid": false,
      "errors": [
        "PlantUML validation failed: 500: PlantUML validation failed: 'DiagramService' object has no attribute 'validate_plantuml_syntax'"
      ]
    },
    "stored_date": "2025-07-13T12:55:59.802041"
  }
}